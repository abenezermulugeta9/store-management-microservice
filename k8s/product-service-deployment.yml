# This YAML defines a Deployment named "product-service-app" for deploying the "product-service-app" application.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service-app  # Name of the Deployment
spec:
  selector:
    matchLabels:
      app: product-service-app  # Select pods with the label "app: product-service-app"
  template:
    metadata:
      labels:
        app: product-service-app  # Labels applied to pods created by this Deployment
    spec:
      containers:
        - name: product-service-app  # Name of the container
          image: abenezermulugeta/productservice  # Docker image to run
          ports:
            - containerPort: 8080  # Port to expose on the container
          env:
            - name: EUREKA_SERVER_ADDRESS  # Environment variable for the container
              valueFrom:
                configMapKeyRef:
                  key: eureka_service_address  # Reference to a key in the "eureka-cm" ConfigMap
                  name: eureka-cm  # Name of the ConfigMap from which to fetch the key
            - name: CONFIG_SERVER_URL  # Another environment variable for the container
              valueFrom:
                configMapKeyRef:
                  key: config_service_url  # Reference to a key in the "config-cm" ConfigMap
                  name: config-cm  # Name of the ConfigMap from which to fetch the key
            - name: DB_HOST  # Another environment variable for the container
              valueFrom:
                configMapKeyRef:
                  key: hostname  # Reference to a key in the "mysql-cm" ConfigMap
                  name: mysql-cm  # Name of the ConfigMap from which to fetch the key

---

# This YAML defines a Service named "product-service-svc" for exposing the "product-service-app" application.
apiVersion: v1
kind: Service
metadata:
  name: product-service-svc  # Name of the Service
spec:
  selector:
    app: product-service-app  # Select pods with the label "app: product-service-app"
  ports:
    - port: 80  # Port exposed by the service externally
      containerPort: 8080  # Port on which the service is running within the container